# Install necessary packages
!pip install torch torchvision matplotlib opencv-python

import torch
import torchvision.transforms as T
import torchvision.models.segmentation as segmentation
import cv2
import numpy as np
import matplotlib.pyplot as plt
from google.colab import files

# Upload your image
uploaded = files.upload()
image_path = list(uploaded.keys())[0]

# Load image and preprocess
img = cv2.imread(image_path)
img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)

transform = T.Compose([
    T.ToPILImage(),
    T.Resize(520),
    T.ToTensor(),
    T.Normalize(mean=[0.485, 0.456, 0.406],
                std=[0.229, 0.224, 0.225]),
])
input_tensor = transform(img).unsqueeze(0)  # add batch dim

# Load pretrained DeepLabV3 model
model = segmentation.deeplabv3_resnet101(pretrained=True).eval()

# Predict segmentation mask
with torch.no_grad():
    output = model(input_tensor)['out'][0]
pred_mask = output.argmax(0).byte().cpu().numpy()

# Define color palette for 21 classes in PASCAL VOC
VOC_COLORMAP = np.array([
    (0, 0, 0),        # background
    (128, 0, 0),      # aeroplane
    (0, 128, 0),      # bicycle
    (128, 128, 0),    # bird
    (0, 0, 128),      # boat
    (128, 0, 128),    # bottle
    (0, 128, 128),    # bus
    (128, 128, 128),  # car
    (64, 0, 0),       # cat
    (192, 0, 0),      # chair
    (64, 128, 0),     # cow
    (192, 128, 0),    # diningtable
    (64, 0, 128),     # dog
    (192, 0, 128),    # horse
    (64, 128, 128),   # motorbike
    (192, 128, 128),  # person
    (0, 64, 0),       # potted plant
    (128, 64, 0),     # sheep
    (0, 192, 0),      # sofa
    (128, 192, 0),    # train
    (0, 64, 128),     # tv/monitor
])

# Create color segmentation map
color_mask = VOC_COLORMAP[pred_mask]

# Plot original image and segmentation side-by-side
plt.figure(figsize=(12,6))
plt.subplot(1,2,1)
plt.imshow(img)
plt.title('Original Image')
plt.axis('off')

plt.subplot(1,2,2)
plt.imshow(color_mask)
plt.title('Segmentation Mask')
plt.axis('off')

plt.show()
